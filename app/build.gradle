plugins {
    id 'com.android.application'
    id 'org.jetbrains.kotlin.android'
    id 'kotlin-parcelize'
    id 'dagger.hilt.android.plugin'
    id 'kotlin-kapt'
    id 'androidx.navigation.safeargs.kotlin'
}

android {
    compileSdk 32

    defaultConfig {
        applicationId "com.mbahgojol.storyapp"
        minSdk 21
        targetSdk 32
        versionCode 1
        versionName "1.0"

        buildConfigField("String", "API_URL", '"https://story-api.dicoding.dev/v1/"')

        testInstrumentationRunner "com.mbahgojol.storyapp.CustomTestRunner"
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_11
        targetCompatibility JavaVersion.VERSION_11
    }

    kotlinOptions {
        jvmTarget = JavaVersion.VERSION_11.toString()
    }
    buildFeatures {
        viewBinding true
    }
    testOptions {
        animationsDisabled = true
    }
}

dependencies {

    implementation 'com.github.kirich1409:viewbindingpropertydelegate:1.5.3'
    implementation 'com.google.android.gms:play-services-maps:18.0.2'
    implementation 'com.google.android.gms:play-services-location:19.0.1'

    def paging_version = "3.1.1",
        idleResourceVersion = '3.2.0',
        fragmentKtx = "1.2.5",
        hilt_version = "2.38.1",
        spekVersion = '2.0.10',
        jUnitPlatformRunnerVersion = '1.5.1',
        jUnitJupiterApiVersion = '5.5.0',
        junitVersion = "4.12",
        mockitoVersion = "2.23.4",
        hamcrestVersion = '1.3',
        androidXTestVersion = '1.1.0',
        robolectricVersion = "4.2.1",
        archLifecycleVersion = '2.0.0',
        kotlinVersion = "1.6.20",
        expressoCoreVersion = "3.2.0",
        testRunnerVersion = "1.2.0",
        testRulesVersion = "1.2.0",
        extJunitVersion = "1.1.1",
        archCoreTestingVersion = "2.1.0",
        navigationVersion = "2.3.2",
        lifecycle_version = "2.5.0-alpha06",
        lottieVersion = "3.6.1",
        room_version = "2.4.2",
        jupiterEngineVersion = "5.5.0"

    implementation "androidx.lifecycle:lifecycle-viewmodel-ktx:$lifecycle_version"
    implementation "androidx.lifecycle:lifecycle-viewmodel-compose:$lifecycle_version"
    implementation "androidx.lifecycle:lifecycle-livedata-ktx:$lifecycle_version"
    implementation "androidx.lifecycle:lifecycle-runtime-ktx:$lifecycle_version"
    implementation "androidx.lifecycle:lifecycle-viewmodel-savedstate:$lifecycle_version"
    //noinspection LifecycleAnnotationProcessorWithJava8
    kapt "androidx.lifecycle:lifecycle-compiler:$lifecycle_version"
    implementation "androidx.lifecycle:lifecycle-common-java8:$lifecycle_version"

    implementation 'androidx.legacy:legacy-support-v4:1.0.0'
    debugImplementation "com.github.chuckerteam.chucker:library:3.5.2"
    releaseImplementation "com.github.chuckerteam.chucker:library-no-op:3.5.2"

    implementation("io.coil-kt:coil:1.4.0")
    implementation 'com.google.code.gson:gson:2.9.0'

    implementation "androidx.activity:activity-ktx:1.4.0"
    implementation "androidx.fragment:fragment-ktx:1.4.1"

    implementation "com.google.dagger:hilt-android:2.38.1"
    kapt "com.google.dagger:hilt-compiler:2.38.1"

    implementation 'com.squareup.retrofit2:retrofit:2.9.0'
    implementation 'com.squareup.retrofit2:adapter-rxjava3:2.9.0'
    implementation("com.squareup.okhttp3:logging-interceptor:4.9.3")
    implementation 'com.squareup.retrofit2:converter-gson:2.9.0'

    implementation 'androidx.navigation:navigation-fragment-ktx:2.4.2'
    implementation 'androidx.navigation:navigation-ui-ktx:2.4.2'
    implementation 'androidx.core:core-ktx:1.7.0'
    implementation 'androidx.appcompat:appcompat:1.4.1'
    implementation 'com.google.android.material:material:1.5.0'
    implementation 'androidx.constraintlayout:constraintlayout:2.1.3'

    implementation "io.reactivex.rxjava3:rxjava:3.1.3"
    implementation 'io.reactivex.rxjava3:rxandroid:3.0.0'
    implementation 'org.jetbrains.kotlinx:kotlinx-coroutines-android:1.6.0'

    implementation "com.airbnb.android:lottie:$lottieVersion"

    implementation "androidx.room:room-runtime:$room_version"
    kapt "androidx.room:room-compiler:$room_version"
    implementation "androidx.room:room-rxjava3:$room_version"

    testImplementation "androidx.room:room-testing:$room_version"
    testImplementation "org.jetbrains.kotlinx:kotlinx-coroutines-test:1.6.0"
    androidTestImplementation "org.jetbrains.kotlinx:kotlinx-coroutines-test:1.6.0"

    androidTestImplementation "com.squareup.okhttp3:mockwebserver:4.9.3"
    androidTestImplementation "com.squareup.okhttp3:okhttp-tls:4.9.3"

    implementation "androidx.datastore:datastore-preferences-core:1.0.0"
    implementation "androidx.datastore:datastore-preferences:1.0.0"
    implementation "androidx.datastore:datastore-preferences-rxjava2:1.0.0"
    implementation "androidx.datastore:datastore-preferences-rxjava3:1.0.0"

    implementation 'com.github.CanHub:Android-Image-Cropper:4.2.1'

    implementation "androidx.navigation:navigation-runtime-ktx:$navigationVersion",
            "androidx.navigation:navigation-fragment-ktx:$navigationVersion",
            "androidx.navigation:navigation-ui-ktx:$navigationVersion",
            "androidx.navigation:navigation-dynamic-features-fragment:$navigationVersion"

    implementation "androidx.paging:paging-runtime:$paging_version"
    implementation "androidx.paging:paging-rxjava3:$paging_version"
    testImplementation "androidx.paging:paging-common:$paging_version"

    def idlingEspressoDependencies = [
            idling: "androidx.test.espresso:espresso-idling-resource:$idleResourceVersion"
    ].values()

    def fragmentTestingDependencies = [
            fragmenttest: "androidx.fragment:fragment-testing:$fragmentKtx"
    ].values()

    def hiltDaggerInstrumentationTest = [
            androidTestImpln              : "com.google.dagger:hilt-android-testing:$hilt_version",
            androidTestAnnotationProcessor: "com.google.dagger:hilt-android-testing:$hilt_version",
    ]

    def hiltDaggerLocalUnitTest = [
            testImplementation     : "com.google.dagger:hilt-android-testing:$hilt_version",
            testAnnotationProcessor: "com.google.dagger:hilt-android-compiler:$hilt_version",
    ]

    def spekDependenciesTestImplementation = [
            spek2Dsl           : "org.spekframework.spek2:spek-dsl-jvm:$spekVersion",
            spekRunner         : "org.spekframework.spek2:spek-runner-junit5:$spekVersion",
            junitPlatformRunner: "org.junit.platform:junit-platform-runner:$jUnitPlatformRunnerVersion",
            jUnitJupiterApi    : "org.junit.jupiter:junit-jupiter-api:$jUnitJupiterApiVersion"
    ]

    def testDependencies = [
            junit        : "junit:junit:$junitVersion",
            mockito      : "org.mockito:mockito-core:$mockitoVersion",
            nhaarman     : "com.nhaarman.mockitokotlin2:mockito-kotlin:2.2.0",
            hamcrest     : "org.hamcrest:hamcrest-all:$hamcrestVersion",
            androidxCore : "androidx.arch.core:core-testing:$archLifecycleVersion",
            kotlinReflect: "org.jetbrains.kotlin:kotlin-reflect:$kotlinVersion",
            robolectric  : "org.robolectric:robolectric:$robolectricVersion",
    ]

    def androidTestDependencies = [
            junit           : "junit:junit:$junitVersion",
            expressoCore    : "androidx.test.espresso:espresso-core:$expressoCoreVersion",
            expresso_intents: "androidx.test.espresso:espresso-intents:$expressoCoreVersion",
            expresso_contrib: "androidx.test.espresso:espresso-contrib:$expressoCoreVersion",
            testRunner      : "androidx.test:runner:$testRunnerVersion",
            testRules       : "androidx.test:rules:$testRulesVersion",
            extJunit        : "androidx.test.ext:junit:$extJunitVersion",
            testCore        : "androidx.test:core:$androidXTestVersion",
            mockitoAndroid  : "org.mockito:mockito-android:$mockitoVersion",
            mockitoCore     : "org.mockito:mockito-core:$mockitoVersion",
            archCoreTesting : "androidx.arch.core:core-testing:$archCoreTestingVersion",
    ]

    def testRuntimeDependencies = [
            jupiteEngine: "org.junit.jupiter:junit-jupiter-engine:$jupiterEngineVersion",
    ]

    implementation idlingEspressoDependencies
    implementation fragmentTestingDependencies

    androidTestImplementation hiltDaggerInstrumentationTest.androidTestImpln
    kaptAndroidTest hiltDaggerInstrumentationTest.androidTestAnnotationProcessor
    testImplementation hiltDaggerLocalUnitTest.testImplementation
    kaptAndroidTest hiltDaggerLocalUnitTest.testAnnotationProcessor

    testImplementation spekDependenciesTestImplementation.values()

    testImplementation testDependencies.values()
    androidTestImplementation androidTestDependencies.values()

    testRuntimeOnly testRuntimeDependencies.values()
}

kapt {
    arguments {
        // Make Hilt share the same definition of Components in tests instead of
        // creating a new set of Components per test class.
        arg("dagger.hilt.shareTestComponents", "true")
    }
}